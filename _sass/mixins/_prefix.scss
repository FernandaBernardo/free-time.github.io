@mixin background-size($width){
	-webkit-background-size: $width;
	-moz-background-size: $width;
	background-size: $width;
}
@mixin border-radius($width){
	-webkit-border-radius: $width;
	-moz-border-radius: $width;
	border-radius: $width;
}
@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
	@if $inset {
		-webkit-box-shadow:inset $top $left $blur $color;
		-moz-box-shadow:inset $top $left $blur $color;
		box-shadow:inset $top $left $blur $color;
	} @else {
		-webkit-box-shadow: $top $left $blur $color;
		-moz-box-shadow: $top $left $blur $color;
		box-shadow: $top $left $blur $color;
	}
}
@mixin text-shadow($x, $y, $blur, $color) {
    text-shadow: $x $y $blur $color;
}
@mixin style-placeholder($color){
	&:focus{color: $color-secondary;}
	&::-webkit-input-placeholder{opacity:0.7; color: $color-secondary;}
	&:-moz-placeholder{opacity:0.7; color: $color-secondary;}
	&::-moz-placeholder{opacity:0.7; color: $color-secondary;}
	&:-ms-input-placeholder{opacity:0.7; color: $color-secondary;}
}
@mixin transition($transition...) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}
@mixin transition-property($property...) {
    -moz-transition-property:    $property;
    -o-transition-property:      $property;
    -webkit-transition-property: $property;
    transition-property:         $property;
}
@mixin transition-duration($duration...) {
    -moz-transition-property:    $duration;
    -o-transition-property:      $duration;
    -webkit-transition-property: $duration;
    transition-property:         $duration;
}
@mixin transition-timing-function($timing...) {
    -moz-transition-timing-function:    $timing;
    -o-transition-timing-function:      $timing;
    -webkit-transition-timing-function: $timing;
    transition-timing-function:         $timing;
}
@mixin transition-delay($delay...) {
    -moz-transition-delay:    $delay;
    -o-transition-delay:      $delay;
    -webkit-transition-delay: $delay;
    transition-delay:         $delay;
}
@mixin transform($transforms) {
	   -moz-transform: $transforms;
	     -o-transform: $transforms;
	    -ms-transform: $transforms;
	-webkit-transform: $transforms;
          transform: $transforms;
}
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}
@mixin scale($scale) {
	 @include transform(scale($scale));
} 
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}
@mixin skew ($x, $y) {
   @include transform(skew(#{$x}deg, #{$y}deg));
}
@mixin transform-origin ($origin) {
    moz-transform-origin: $origin;
	     -o-transform-origin: $origin;
	    -ms-transform-origin: $origin;
	-webkit-transform-origin: $origin;
          transform-origin: $origin;
}

@mixin clearfix {
	&:before, &:after {
	    content: "";
	    display: table;
	}
	&:after {
	    clear: both;
	}
}

@mixin respond-to($media) {
  @if $media == handhelds {
    @media only screen and (max-width: $break-small) { @content; }
  }
  @else if $media == medium-screens {
    @media only screen and (min-width: $break-small + 1) and (max-width: $break-large - 1) { @content; }
  }
  @else if $media == wide-screens {
    @media only screen and (min-width: $break-large) { @content; }
  }
}
